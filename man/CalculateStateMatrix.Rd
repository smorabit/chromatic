% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scoring.R
\name{CalculateStateMatrix}
\alias{CalculateStateMatrix}
\title{Calculate per-cell chromatin state counts from annotated peaks}
\usage{
CalculateStateMatrix(peaks_mat, peaks_gr)
}
\arguments{
\item{peaks_mat}{A sparse or dense matrix of peak accessibility counts
(rows = peaks, columns = cells). Typically obtained from
\code{\link[Seurat]{GetAssayData}} on the ATAC assay.}

\item{peaks_gr}{A \code{\link[GenomicRanges]{GRanges}} object of the same
length as the number of rows in \code{peaks_mat}, containing at least
one column named \code{annotation} giving the chromatin state label
for each peak.}
}
\value{
A cell-by-state matrix of summed fragment counts per chromatin state
(rows = cells, columns = chromatin states).
}
\description{
This helper function aggregates a peak-by-cell matrix into a
chromatin state–by-cell matrix based on the state annotations
assigned to each peak. Each cell’s counts across peaks belonging
to the same chromatin state are summed to produce a per-state
count matrix, which is then transposed to return a cell-by-state
matrix suitable for downstream analyses.
}
\details{
This function assumes that each row of \code{peaks_mat} corresponds
to the same peak as the corresponding entry in \code{peaks_gr}, and that
each peak has a valid chromatin state annotation in \code{peaks_gr$annotation}.
Peaks with the same state annotation are grouped and their counts summed
across cells. The resulting state-by-cell matrix is transposed to return
cell-by-state counts.
}
\examples{
# peaks_mat: peaks x cells matrix from ATAC assay
# peaks_gr: GRanges of peaks with 'annotation' column
state_matrix <- CalculateStateMatrix(peaks_mat, peaks_gr)

}
